// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

//Database From Local
// datasource db {
//   provider = "mysql"
//   url      = env("DATABASE_URL")
// }

//Database From VM
datasource db {
  provider = "mysql"
  url      = "file:./db.js"
}

// Model

model Akun {
  id        Int      @id @default(autoincrement())
  roleId    Int
  username  String   @unique
  password  String
  createdAt DateTime @default(now())

  Role Role @relation(fields: [roleId], references: [id], onDelete: Cascade)

  Customer Customer[]
  Pegawai  Pegawai[]

  @@map("AKUN")
}

model Customer {
  id       Int    @id @default(autoincrement())
  akunId   Int?
  jenis_customer    String
  nama_customer     String
  nama_institusi String
  nomor_identitas   String
  nomor_telepon   String
  email    String
  alamat   String

  Akun      Akun?       @relation(fields: [akunId], references: [id], onDelete: Cascade)
  Reservasi Reservasi[]

  @@map("CUSTOMER")
}

model DetailKamar {
  id      Int  @id @default(autoincrement())
  kamarId Int
  nomor_kamar Int?

  Kamar Kamar @relation(fields: [kamarId], references: [id], onDelete: Cascade)

  @@map("DETAIL_KAMAR")
}

model DetailReservasiFasilitas {
  id          Int  @id @default(autoincrement())
  reservasiId Int
  fasilitasId Int
  jumlah      Int?
  subtotal    Float?

  Reservasi         Reservasi         @relation(fields: [reservasiId], references: [id], onDelete: Cascade)
  FasilitasTambahan FasilitasTambahan @relation(fields: [fasilitasId], references: [id], onDelete: Cascade)

  @@map("DETAIL_RESERVASI_FASILITAS")
}

model DetailReservasiKamar {
  id          Int  @id @default(autoincrement())
  kamarId     Int
  reservasiId Int
  jumlah      Int?
  subtotal    Float?

  Reservasi Reservasi @relation(fields: [reservasiId], references: [id], onDelete: Cascade)
  Kamar     Kamar     @relation(fields: [kamarId], references: [id], onDelete: Cascade)

  @@map("DETAIL_RESERVASI_KAMAR")
}

model FasilitasTambahan {
  id     Int    @id @default(autoincrement())
  nama_fasilitas   String
  satuan Int?
  harga  Float?

  DetailReservasiFasilitas DetailReservasiFasilitas[]

  @@map("FASILITAS_TAMBAHAN")
}

model Kamar {
  id        Int    @id @default(autoincrement())
  jenisKamar     String
  jenisBed  String
  kapasitas Int?
  luas      Int?
  fasilitas String
  jumlah_bed    Int?

  DetailKamar          DetailKamar[]
  DetailReservasiKamar DetailReservasiKamar[]
  Tarif                Tarif[]

  @@map("KAMAR")
}

model NotaPelunasan {
  id          Int    @id @default(autoincrement())
  reservasiId Int
  no_invoice   String
  tax         Float?
  subtotal    Float?
  jaminan     Float?
  deposit     Float?
  cash        Float?

  Reservasi Reservasi @relation(fields: [reservasiId], references: [id], onDelete: Cascade)

  @@map("NOTA_PELUNASAN")
}

model Pegawai {
  id     Int    @id @default(autoincrement())
  akunId Int?
  nama   String

  Akun      Akun?       @relation(fields: [akunId], references: [id], onDelete: Cascade)
  Reservasi Reservasi[]

  @@map("PEGAWAI")
}

model Reservasi {
  id               Int      @id @default(autoincrement())
  pegawaiId        Int?
  customerId       Int?
  tanggal_reservasi          DateTime
  check_in          DateTime
  check_out         DateTime
  jumlahDewasa           Int?
  jumlahAnakAnak         Int?
  status           String
  prefix_reservasi String

  Pegawai                  Pegawai?                   @relation(fields: [pegawaiId], references: [id], onDelete: Cascade)
  Customer                 Customer?                  @relation(fields: [customerId], references: [id], onDelete: Cascade)
  DetailReservasiFasilitas DetailReservasiFasilitas[]
  DetailReservasiKamar     DetailReservasiKamar[]
  NotaPelunasan            NotaPelunasan[]

  @@map("RESERVASI")
}

model Role {
  id   Int    @id @default(autoincrement())
  namaRole String
  Akun Akun[]

  @@map("ROLE")
}

model Season {
  id             Int      @id @default(autoincrement())
  jenis_season          String
  tanggal_awal    DateTime
  tanggal_akhir   DateTime
  perubahan_harga Float
  Tarif          Tarif[]

  @@map("SEASON")
}

model Tarif {
  id       Int  @id @default(autoincrement())
  seasonId Int
  kamarId  Int
  harga    Float?

  Season Season @relation(fields: [seasonId], references: [id], onDelete: Cascade)
  Kamar  Kamar  @relation(fields: [kamarId], references: [id], onDelete: Cascade)

  @@map("TARIF")
}
